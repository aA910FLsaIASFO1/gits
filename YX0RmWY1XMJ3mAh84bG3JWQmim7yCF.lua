local a={}local b={lua={"and","break","or","else","elseif","if","then","until","repeat","while","do","for","in","end","local","return","function","export"},rbx={"game","workspace","script","math","string","table","task","wait","select","next","Enum","error","warn","tick","assert","shared","loadstring","tonumber","tostring","type","typeof","unpack","print","Instance","CFrame","Vector3","Vector2","Color3","UDim","UDim2","Ray","BrickColor","OverlapParams","RaycastParams","Axes","Random","Region3","Rect","TweenInfo","collectgarbage","not","utf8","pcall","xpcall","_G","setmetatable","getmetatable","os","pairs","ipairs"},operators={"#","+","-","*","%","/","^","=","~","=","<",">",",",".","(",")","{","}","[","]",";",":"}}local c={numbers=Color3.fromRGB(181,206,168),boolean=Color3.fromRGB(66,156,195),operator=Color3.fromRGB(255,255,255),lua=Color3.fromRGB(69,180,152),rbx=Color3.fromRGB(66,156,195),str=Color3.fromRGB(193,119,76),comment=Color3.fromRGB(103,110,149),null=Color3.fromRGB(66,156,195),call=Color3.fromRGB(255,255,255),self_call=Color3.fromRGB(255,255,255),local_color=Color3.fromRGB(66,156,1954),function_color=Color3.fromRGB(66,156,195),self_color=Color3.fromRGB(255,255,255),local_property=Color3.fromRGB(255,255,255)}local function d(b)local e={}for f,g in ipairs(b)do e[g]=true end;return e end;local h=d(b.lua)local i=d(b.rbx)local j=d(b.operators)local function k(l,m)local n=l[m]if c[n.."_color"]then return c[n.."_color"]end;if tonumber(n)then return c.numbers elseif n=="nil"then return c.null elseif n:sub(1,2)=="--"then return c.comment elseif j[n]then return c.operator elseif h[n]then return c.rbx elseif i[n]then return c.lua elseif n:sub(1,1)=="\""or n:sub(1,1)=="\'"then return c.str elseif n=="true"or n=="false"then return c.boolean end;if l[m+1]=="("then if l[m-1]==":"then return c.self_call end;return c.call end;if l[m-1]=="."then if l[m-2]=="Enum"then return c.rbx end;return c.local_property end end;function a.run(o)local l={}local p=""local q=false;local r=false;local s=false;for t=1,#o do local u=o:sub(t,t)if r then if u=="\n"and not s then table.insert(l,p)table.insert(l,u)p=""r=false elseif o:sub(t-1,t)=="]]"and s then p=p.."]"table.insert(l,p)p=""r=false;s=false else p=p..u end elseif q then if u==q and o:sub(t-1,t-1)~="\\"or u=="\n"then p=p..u;q=false else p=p..u end else if o:sub(t,t+1)=="--"then table.insert(l,p)p="-"r=true;s=o:sub(t+2,t+3)=="[["elseif u=="\""or u=="\'"then table.insert(l,p)p=u;q=u elseif j[u]then table.insert(l,p)table.insert(l,u)p=""elseif u:match("[%w_]")then p=p..u else table.insert(l,p)table.insert(l,u)p=""end end end;table.insert(l,p)local v={}for t,n in ipairs(l)do local w=k(l,t)if w then local x=string.format("<font color = \"#%s\">%s</font>",w:ToHex(),n:gsub("<","&lt;"):gsub(">","&gt;"))table.insert(v,x)else table.insert(v,n)end end;return table.concat(v)end;return a
